




<!DOCTYPE html>
<html class="   ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    
    <title>tablesorter/jquery.tablesorter.min.js at master Â· christianbach/tablesorter</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="christianbach/tablesorter" name="twitter:title" /><meta content="tablesorter - Flexible client-side table sorting" name="twitter:description" /><meta content="https://avatars2.githubusercontent.com/u/7323932?s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars2.githubusercontent.com/u/7323932?s=400" property="og:image" /><meta content="christianbach/tablesorter" property="og:title" /><meta content="https://github.com/christianbach/tablesorter" property="og:url" /><meta content="tablesorter - Flexible client-side table sorting" property="og:description" />

    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />

    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="C0720702:1EFC:1E03232:53820DF1" name="octolytics-dimension-request_id" /><meta content="3720092" name="octolytics-actor-id" /><meta content="mestrebisli" name="octolytics-actor-login" /><meta content="f0525693db4b462ccc4be1cf2744ab58af0bda15c071621d8269e9d21d25d6a7" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="e0CaLumyd1VQDoyAXobvXfyK6DbVwiCxO35HmJhD/dE9rOiaLyZmKtg6zi6XldGQuQuH4t6hmg4yYk/hQDXCOw==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-a06ae46033959f7563b20c5faff6f5e60175253f.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-7a8b4c414ee8c9e99d65a81937c61fe5bdcb58e9.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="6ed0dfb07f8864798874317e7cdf88d5">

      
  <meta name="description" content="tablesorter - Flexible client-side table sorting" />

  <meta content="7323932" name="octolytics-dimension-user_id" /><meta content="christianbach" name="octolytics-dimension-user_login" /><meta content="19969620" name="octolytics-dimension-repository_id" /><meta content="christianbach/tablesorter" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="19969620" name="octolytics-dimension-repository_network_root_id" /><meta content="christianbach/tablesorter" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/christianbach/tablesorter/commits/master.atom" rel="alternate" title="Recent Commits to tablesorter:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production macintosh vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" aria-label="You have unread notifications" class="notification-indicator tooltipped tooltipped-s" data-hotkey="g n">
        <span class="mail-status unread"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<div class="commandbar">
  <span class="message"></span>
  <input type="text" data-hotkey="s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="mestrebisli"
      data-repo="christianbach/tablesorter"
      data-branch="master"
      data-sha="34e759b455844483fd1b9203af97ca5312eaab56"
  >
  <div class="display hidden"></div>
</div>

    <input type="hidden" name="nwo" value="christianbach/tablesorter" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/mestrebisli" class="name">
        <img alt="mestrebisli" class=" js-avatar" data-user="3720092" height="20" src="https://avatars0.githubusercontent.com/u/3720092?s=140" width="20" /> mestrebisli
      </a>
    </li>

    <li class="new-menu dropdown-toggle js-menu-container">
      <a href="#" class="js-menu-target tooltipped tooltipped-s" aria-label="Create new...">
        <span class="octicon octicon-plus"></span>
        <span class="dropdown-arrow"></span>
      </a>

      <div class="new-menu-content js-menu-content">
      </div>
    </li>

    <li>
      <a href="/settings/profile" id="account_settings"
        class="tooltipped tooltipped-s"
        aria-label="Account settings ">
        <span class="octicon octicon-tools"></span>
      </a>
    </li>
    <li>
      <form class="logout-form" action="/logout" method="post">
        <button class="sign-out-button tooltipped tooltipped-s" aria-label="Sign out">
          <span class="octicon octicon-sign-out"></span>
        </button>
      </form>
    </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="christianbach/tablesorter">This repository</span>
    </li>
      <li>
        <a href="/christianbach/tablesorter/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

        



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="klC0Rr7h1NJ4OwfPKbKvdeNZ1v43z01Ff8TtaP+BC2wnuLC98zkVuz6v2v5peNXsRZTK1cDOmP5p5vcBOMCO7Q==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="19969620" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/christianbach/tablesorter/watchers">
        1
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-x js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/christianbach/tablesorter/unstar" class="js-toggler-form starred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="j8kUXwfGNxomP6Hl6Ic/KpTfHLK0XVCwpLIsIXaT9ddTDeTbs9ywxBhJfFCB83gmL/Abse/Nz5DRkRSlc+VpAQ==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar christianbach/tablesorter">
        <span class="octicon octicon-star"></span><span class="text">Unstar</span>
      </button>
        <a class="social-count js-social-count" href="/christianbach/tablesorter/stargazers">
          13
        </a>
</form>
    <form accept-charset="UTF-8" action="/christianbach/tablesorter/star" class="js-toggler-form unstarred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="yBkkD9PuCCv4d1ftoHzstX6fbmd/iVbtEZk4an4/dtRXniwSsULtircJL/B3sPGihclW1pu7MLEDsl6k0d6+uQ==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star christianbach/tablesorter">
        <span class="octicon octicon-star"></span><span class="text">Star</span>
      </button>
        <a class="social-count js-social-count" href="/christianbach/tablesorter/stargazers">
          13
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/christianbach/tablesorter/fork" class="minibutton with-count js-toggler-target fork-button lighter tooltipped-n" title="Fork your own copy of christianbach/tablesorter to your account" aria-label="Fork your own copy of christianbach/tablesorter to your account" rel="facebox nofollow">
            <span class="octicon octicon-repo-forked"></span><span class="text">Fork</span>
          </a>
          <a href="/christianbach/tablesorter/network" class="social-count">3</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/christianbach" class="url fn" itemprop="url" rel="author"><span itemprop="title">christianbach</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/christianbach/tablesorter" class="js-current-repository js-repo-home-link">tablesorter</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/christianbach/tablesorter" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /christianbach/tablesorter">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/christianbach/tablesorter/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues /christianbach/tablesorter/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>0</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/christianbach/tablesorter/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /christianbach/tablesorter/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>0</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/christianbach/tablesorter/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g w" data-selected-links="repo_wiki /christianbach/tablesorter/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/christianbach/tablesorter/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /christianbach/tablesorter/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/christianbach/tablesorter/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /christianbach/tablesorter/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/christianbach/tablesorter/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /christianbach/tablesorter/network">
          <span class="octicon octicon-repo-forked"></span> <span class="full-word">Network</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/christianbach/tablesorter.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/christianbach/tablesorter.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:christianbach/tablesorter.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:christianbach/tablesorter.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/christianbach/tablesorter" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/christianbach/tablesorter" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/christianbach/tablesorter" class="minibutton sidebar-button js-conduit-rewrite-url" title="Save christianbach/tablesorter to your computer and use it in GitHub Desktop." aria-label="Save christianbach/tablesorter to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/christianbach/tablesorter/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download christianbach/tablesorter as a zip file"
                   title="Download christianbach/tablesorter as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<a href="/christianbach/tablesorter/blob/cf3b83df2b988ce04eac266b4a5e332f711896d5/jquery.tablesorter.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:13ec48fd77d1252dcb04c68deac31bde -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/christianbach/tablesorter/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/christianbach/tablesorter/blob/master/jquery.tablesorter.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/christianbach/tablesorter" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">tablesorter</span></a></span></span><span class="separator"> / </span><strong class="final-path">jquery.tablesorter.min.js</strong> <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="jquery.tablesorter.min.js" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
  </div>
</div>


  <div class="commit file-history-tease">
      <img alt="Christian Bach" class="main-avatar js-avatar" data-user="7323932" height="24" src="https://avatars1.githubusercontent.com/u/7323932?s=140" width="24" />
      <span class="author"><a href="/christianbach" rel="author">christianbach</a></span>
      <time datetime="2014-05-20T22:12:06+02:00" is="relative-time" title-format="%Y-%m-%d %H:%M:%S %z" title="2014-05-20 22:12:06 +0200">May 20, 2014</time>
      <div class="commit-title">
          <a href="/christianbach/tablesorter/commit/6b998d9dea1bb7e98bdc0e3ce4a2504a970c2140" class="message" data-pjax="true" title="Initial commit, finaly where on github">Initial commit, finaly where on github</a>
      </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong>  contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Christian Bach" class=" js-avatar" data-user="7323932" height="24" src="https://avatars1.githubusercontent.com/u/7323932?s=140" width="24" />
            <a href="/christianbach">christianbach</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>4 lines (3 sloc)</span>
          <span class="meta-divider"></span>
        <span>16.52 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped tooltipped-w js-conduit-openfile-check"
               href="http://mac.github.com"
               data-url="github-mac://openRepo/https://github.com/christianbach/tablesorter?branch=master&amp;filepath=jquery.tablesorter.min.js"
               aria-label="Open this file in GitHub for Mac"
               data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton tooltipped tooltipped-n js-update-url-with-hash"
                   aria-label="Clicking this button will automatically fork this project so you can edit the file"
                   href="/christianbach/tablesorter/edit/master/jquery.tablesorter.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/christianbach/tablesorter/raw/master/jquery.tablesorter.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/christianbach/tablesorter/blame/master/jquery.tablesorter.min.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/christianbach/tablesorter/commits/master/jquery.tablesorter.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

            <a class="minibutton danger empty-icon tooltipped tooltipped-s"
               href="/christianbach/tablesorter/delete/master/jquery.tablesorter.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">

          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><br/></div><div class='line' id='LC2'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">){</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">tablesorter</span><span class="o">:</span><span class="k">new</span></div><div class='line' id='LC3'><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">parsers</span><span class="o">=</span><span class="p">[],</span><span class="nx">widgets</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">defaults</span><span class="o">=</span><span class="p">{</span><span class="nx">cssHeader</span><span class="o">:</span><span class="s2">&quot;header&quot;</span><span class="p">,</span><span class="nx">cssAsc</span><span class="o">:</span><span class="s2">&quot;headerSortUp&quot;</span><span class="p">,</span><span class="nx">cssDesc</span><span class="o">:</span><span class="s2">&quot;headerSortDown&quot;</span><span class="p">,</span><span class="nx">cssChildRow</span><span class="o">:</span><span class="s2">&quot;expand-child&quot;</span><span class="p">,</span><span class="nx">sortInitialOrder</span><span class="o">:</span><span class="s2">&quot;asc&quot;</span><span class="p">,</span><span class="nx">sortMultiSortKey</span><span class="o">:</span><span class="s2">&quot;shiftKey&quot;</span><span class="p">,</span><span class="nx">sortForce</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">sortAppend</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">sortLocaleCompare</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">textExtraction</span><span class="o">:</span><span class="s2">&quot;simple&quot;</span><span class="p">,</span><span class="nx">parsers</span><span class="o">:</span><span class="p">{},</span><span class="nx">widgets</span><span class="o">:</span><span class="p">[],</span><span class="nx">widgetZebra</span><span class="o">:</span><span class="p">{</span><span class="nx">css</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;even&quot;</span><span class="p">,</span><span class="s2">&quot;odd&quot;</span><span class="p">]},</span><span class="nx">headers</span><span class="o">:</span><span class="p">{},</span><span class="nx">widthFixed</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">cancelSelection</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">sortList</span><span class="o">:</span><span class="p">[],</span><span class="nx">headerList</span><span class="o">:</span><span class="p">[],</span><span class="nx">dateFormat</span><span class="o">:</span><span class="s2">&quot;us&quot;</span><span class="p">,</span><span class="nx">decimal</span><span class="o">:</span><span class="s1">&#39;/\.|\,/g&#39;</span><span class="p">,</span><span class="nx">onRenderHeader</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">selectorHeaders</span><span class="o">:</span><span class="s1">&#39;thead th&#39;</span><span class="p">,</span><span class="nx">debug</span><span class="o">:</span><span class="kc">false</span><span class="p">};</span><span class="kd">function</span> <span class="nx">benchmark</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">log</span><span class="p">(</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">().</span><span class="nx">getTime</span><span class="p">()</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">getTime</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;ms&quot;</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">benchmark</span><span class="o">=</span><span class="nx">benchmark</span><span class="p">;</span><span class="kd">function</span> <span class="nx">log</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">console</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">console</span><span class="p">.</span><span class="nx">debug</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">s</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);}}</span><span class="kd">function</span> <span class="nx">buildParserCache</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">$headers</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="kd">var</span> <span class="nx">parsersDebug</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">rows</span><span class="o">=</span><span class="nx">table</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">rows</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rows</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">list</span><span class="o">=</span><span class="p">[],</span><span class="nx">cells</span><span class="o">=</span><span class="nx">rows</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">cells</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">cells</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">metadata</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nx">$headers</span><span class="p">[</span><span class="nx">i</span><span class="p">]).</span><span class="nx">metadata</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">$</span><span class="p">(</span><span class="nx">$headers</span><span class="p">[</span><span class="nx">i</span><span class="p">]).</span><span class="nx">metadata</span><span class="p">().</span><span class="nx">sorter</span><span class="p">)){</span><span class="nx">p</span><span class="o">=</span><span class="nx">getParserById</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nx">$headers</span><span class="p">[</span><span class="nx">i</span><span class="p">]).</span><span class="nx">metadata</span><span class="p">().</span><span class="nx">sorter</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">((</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">sorter</span><span class="p">)){</span><span class="nx">p</span><span class="o">=</span><span class="nx">getParserById</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">sorter</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="p">){</span><span class="nx">p</span><span class="o">=</span><span class="nx">detectParserForColumn</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">rows</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="nx">parsersDebug</span><span class="o">+=</span><span class="s2">&quot;column:&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot; parser:&quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s2">&quot;\n&quot;</span><span class="p">;}</span><span class="nx">list</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">p</span><span class="p">);}}</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="nx">log</span><span class="p">(</span><span class="nx">parsersDebug</span><span class="p">);}</span><span class="k">return</span> <span class="nx">list</span><span class="p">;};</span><span class="kd">function</span> <span class="nx">detectParserForColumn</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">rows</span><span class="p">,</span><span class="nx">rowIndex</span><span class="p">,</span><span class="nx">cellIndex</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">parsers</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">node</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">nodeValue</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">keepLooking</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">nodeValue</span><span class="o">==</span><span class="s1">&#39;&#39;</span><span class="o">&amp;&amp;</span><span class="nx">keepLooking</span><span class="p">){</span><span class="nx">rowIndex</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rows</span><span class="p">[</span><span class="nx">rowIndex</span><span class="p">]){</span><span class="nx">node</span><span class="o">=</span><span class="nx">getNodeFromRowAndCellIndex</span><span class="p">(</span><span class="nx">rows</span><span class="p">,</span><span class="nx">rowIndex</span><span class="p">,</span><span class="nx">cellIndex</span><span class="p">);</span><span class="nx">nodeValue</span><span class="o">=</span><span class="nx">trimAndGetNodeText</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">,</span><span class="nx">node</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Checking if value was empty on row:&#39;</span><span class="o">+</span><span class="nx">rowIndex</span><span class="p">);}}</span><span class="k">else</span><span class="p">{</span><span class="nx">keepLooking</span><span class="o">=</span><span class="kc">false</span><span class="p">;}}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">parsers</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">is</span><span class="p">(</span><span class="nx">nodeValue</span><span class="p">,</span><span class="nx">table</span><span class="p">,</span><span class="nx">node</span><span class="p">)){</span><span class="k">return</span> <span class="nx">parsers</span><span class="p">[</span><span class="nx">i</span><span class="p">];}}</span><span class="k">return</span> <span class="nx">parsers</span><span class="p">[</span><span class="mi">0</span><span class="p">];}</span><span class="kd">function</span> <span class="nx">getNodeFromRowAndCellIndex</span><span class="p">(</span><span class="nx">rows</span><span class="p">,</span><span class="nx">rowIndex</span><span class="p">,</span><span class="nx">cellIndex</span><span class="p">){</span><span class="k">return</span> <span class="nx">rows</span><span class="p">[</span><span class="nx">rowIndex</span><span class="p">].</span><span class="nx">cells</span><span class="p">[</span><span class="nx">cellIndex</span><span class="p">];}</span><span class="kd">function</span> <span class="nx">trimAndGetNodeText</span><span class="p">(</span><span class="nx">config</span><span class="p">,</span><span class="nx">node</span><span class="p">){</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">getElementText</span><span class="p">(</span><span class="nx">config</span><span class="p">,</span><span class="nx">node</span><span class="p">));}</span><span class="kd">function</span> <span class="nx">getParserById</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">parsers</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">parsers</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">id</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">name</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="k">return</span> <span class="nx">parsers</span><span class="p">[</span><span class="nx">i</span><span class="p">];}}</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="kd">function</span> <span class="nx">buildCache</span><span class="p">(</span><span class="nx">table</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="kd">var</span> <span class="nx">cacheTime</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();}</span><span class="kd">var</span> <span class="nx">totalRows</span><span class="o">=</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">table</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">rows</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">totalCells</span><span class="o">=</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">rows</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">table</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">rows</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">cells</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">parsers</span><span class="o">=</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">parsers</span><span class="p">,</span><span class="nx">cache</span><span class="o">=</span><span class="p">{</span><span class="nx">row</span><span class="o">:</span><span class="p">[],</span><span class="nx">normalized</span><span class="o">:</span><span class="p">[]};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">totalRows</span><span class="p">;</span><span class="o">++</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">rows</span><span class="p">[</span><span class="nx">i</span><span class="p">]),</span><span class="nx">cols</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">cssChildRow</span><span class="p">)){</span><span class="nx">cache</span><span class="p">.</span><span class="nx">row</span><span class="p">[</span><span class="nx">cache</span><span class="p">.</span><span class="nx">row</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">cache</span><span class="p">.</span><span class="nx">row</span><span class="p">[</span><span class="nx">cache</span><span class="p">.</span><span class="nx">row</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">continue</span><span class="p">;}</span><span class="nx">cache</span><span class="p">.</span><span class="nx">row</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">totalCells</span><span class="p">;</span><span class="o">++</span><span class="nx">j</span><span class="p">){</span><span class="nx">cols</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">parsers</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">format</span><span class="p">(</span><span class="nx">getElementText</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">cells</span><span class="p">[</span><span class="nx">j</span><span class="p">]),</span><span class="nx">table</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">cells</span><span class="p">[</span><span class="nx">j</span><span class="p">]));}</span><span class="nx">cols</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">cache</span><span class="p">.</span><span class="nx">normalized</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="nx">cache</span><span class="p">.</span><span class="nx">normalized</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">cols</span><span class="p">);</span><span class="nx">cols</span><span class="o">=</span><span class="kc">null</span><span class="p">;};</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="nx">benchmark</span><span class="p">(</span><span class="s2">&quot;Building cache for &quot;</span><span class="o">+</span><span class="nx">totalRows</span><span class="o">+</span><span class="s2">&quot; rows:&quot;</span><span class="p">,</span><span class="nx">cacheTime</span><span class="p">);}</span><span class="k">return</span> <span class="nx">cache</span><span class="p">;};</span><span class="kd">function</span> <span class="nx">getElementText</span><span class="p">(</span><span class="nx">config</span><span class="p">,</span><span class="nx">node</span><span class="p">){</span><span class="kd">var</span> <span class="nx">text</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">node</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">config</span><span class="p">.</span><span class="nx">supportsTextContent</span><span class="p">)</span><span class="nx">config</span><span class="p">.</span><span class="nx">supportsTextContent</span><span class="o">=</span><span class="nx">node</span><span class="p">.</span><span class="nx">textContent</span><span class="o">||</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">textExtraction</span><span class="o">==</span><span class="s2">&quot;simple&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">supportsTextContent</span><span class="p">){</span><span class="nx">text</span><span class="o">=</span><span class="nx">node</span><span class="p">.</span><span class="nx">textContent</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">node</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">node</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">hasChildNodes</span><span class="p">()){</span><span class="nx">text</span><span class="o">=</span><span class="nx">node</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">innerHTML</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">text</span><span class="o">=</span><span class="nx">node</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;}}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">textExtraction</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="nx">text</span><span class="o">=</span><span class="nx">config</span><span class="p">.</span><span class="nx">textExtraction</span><span class="p">(</span><span class="nx">node</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">text</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="nx">node</span><span class="p">).</span><span class="nx">text</span><span class="p">();}}</span><span class="k">return</span> <span class="nx">text</span><span class="p">;}</span><span class="kd">function</span> <span class="nx">appendToTable</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">cache</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="kd">var</span> <span class="nx">appendTime</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">cache</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">row</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">normalized</span><span class="p">,</span><span class="nx">totalRows</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">checkCell</span><span class="o">=</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">tableBody</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">rows</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">totalRows</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">pos</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="nx">checkCell</span><span class="p">];</span><span class="nx">rows</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">pos</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">appender</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">pos</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="nx">tableBody</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">pos</span><span class="p">][</span><span class="nx">j</span><span class="p">]);}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">appender</span><span class="p">){</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">appender</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">rows</span><span class="p">);}</span><span class="nx">rows</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="nx">benchmark</span><span class="p">(</span><span class="s2">&quot;Rebuilt table:&quot;</span><span class="p">,</span><span class="nx">appendTime</span><span class="p">);}</span><span class="nx">applyWidget</span><span class="p">(</span><span class="nx">table</span><span class="p">);</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">$</span><span class="p">(</span><span class="nx">table</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;sortEnd&quot;</span><span class="p">);},</span><span class="mi">0</span><span class="p">);};</span><span class="kd">function</span> <span class="nx">buildHeaders</span><span class="p">(</span><span class="nx">table</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="kd">var</span> <span class="nx">time</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();}</span><span class="kd">var</span> <span class="nx">meta</span><span class="o">=</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">metadata</span><span class="p">)</span><span class="o">?</span><span class="kc">true</span><span class="o">:</span><span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">header_index</span><span class="o">=</span><span class="nx">computeTableHeaderCellIndexes</span><span class="p">(</span><span class="nx">table</span><span class="p">);</span><span class="nx">$tableHeaders</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">selectorHeaders</span><span class="p">,</span><span class="nx">table</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">index</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">column</span><span class="o">=</span><span class="nx">header_index</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">rowIndex</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">cellIndex</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">order</span><span class="o">=</span><span class="nx">formatSortingOrder</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortInitialOrder</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">order</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">checkHeaderMetadata</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">||</span><span class="nx">checkHeaderOptions</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">index</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">sortDisabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">checkHeaderOptionsSortingLocked</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">index</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">order</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lockedOrder</span><span class="o">=</span><span class="nx">checkHeaderOptionsSortingLocked</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">index</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">sortDisabled</span><span class="p">){</span><span class="kd">var</span> <span class="nx">$th</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">cssHeader</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">onRenderHeader</span><span class="p">)</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">onRenderHeader</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">$th</span><span class="p">);}</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">headerList</span><span class="p">[</span><span class="nx">index</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">;});</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="nx">benchmark</span><span class="p">(</span><span class="s2">&quot;Built headers:&quot;</span><span class="p">,</span><span class="nx">time</span><span class="p">);</span><span class="nx">log</span><span class="p">(</span><span class="nx">$tableHeaders</span><span class="p">);}</span><span class="k">return</span> <span class="nx">$tableHeaders</span><span class="p">;};</span><span class="kd">function</span> <span class="nx">computeTableHeaderCellIndexes</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">matrix</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">lookup</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">thead</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;THEAD&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">trs</span><span class="o">=</span><span class="nx">thead</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;TR&#39;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">trs</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">cells</span><span class="o">=</span><span class="nx">trs</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">cells</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">cells</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">cells</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span><span class="kd">var</span> <span class="nx">rowIndex</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">rowIndex</span><span class="p">;</span><span class="kd">var</span> <span class="nx">cellId</span><span class="o">=</span><span class="nx">rowIndex</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">cellIndex</span><span class="p">;</span><span class="kd">var</span> <span class="nx">rowSpan</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rowSpan</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">colSpan</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">colSpan</span><span class="o">||</span><span class="mi">1</span></div><div class='line' id='LC4'><span class="kd">var</span> <span class="nx">firstAvailCol</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="nx">matrix</span><span class="p">[</span><span class="nx">rowIndex</span><span class="p">])</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">matrix</span><span class="p">[</span><span class="nx">rowIndex</span><span class="p">]</span><span class="o">=</span><span class="p">[];}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">matrix</span><span class="p">[</span><span class="nx">rowIndex</span><span class="p">].</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="nx">matrix</span><span class="p">[</span><span class="nx">rowIndex</span><span class="p">][</span><span class="nx">k</span><span class="p">])</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">firstAvailCol</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">break</span><span class="p">;}}</span><span class="nx">lookup</span><span class="p">[</span><span class="nx">cellId</span><span class="p">]</span><span class="o">=</span><span class="nx">firstAvailCol</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">rowIndex</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">rowIndex</span><span class="o">+</span><span class="nx">rowSpan</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="nx">matrix</span><span class="p">[</span><span class="nx">k</span><span class="p">])</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">matrix</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="p">[];}</span><span class="kd">var</span> <span class="nx">matrixrow</span><span class="o">=</span><span class="nx">matrix</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">firstAvailCol</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">firstAvailCol</span><span class="o">+</span><span class="nx">colSpan</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="nx">matrixrow</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;x&quot;</span><span class="p">;}}}}</span><span class="k">return</span> <span class="nx">lookup</span><span class="p">;}</span><span class="kd">function</span> <span class="nx">checkCellColSpan</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">rows</span><span class="p">,</span><span class="nx">row</span><span class="p">){</span><span class="kd">var</span> <span class="nx">arr</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="nx">table</span><span class="p">.</span><span class="nx">tHead</span><span class="p">.</span><span class="nx">rows</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">row</span><span class="p">].</span><span class="nx">cells</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">cell</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">cell</span><span class="p">.</span><span class="nx">colSpan</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="nx">arr</span><span class="o">=</span><span class="nx">arr</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">checkCellColSpan</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">headerArr</span><span class="p">,</span><span class="nx">row</span><span class="o">++</span><span class="p">));}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">tHead</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="o">||</span><span class="p">(</span><span class="nx">cell</span><span class="p">.</span><span class="nx">rowSpan</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">||!</span><span class="nx">r</span><span class="p">[</span><span class="nx">row</span><span class="o">+</span><span class="mi">1</span><span class="p">])){</span><span class="nx">arr</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">cell</span><span class="p">);}}}</span><span class="k">return</span> <span class="nx">arr</span><span class="p">;};</span><span class="kd">function</span> <span class="nx">checkHeaderMetadata</span><span class="p">(</span><span class="nx">cell</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="nx">$</span><span class="p">.</span><span class="nx">metadata</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nx">cell</span><span class="p">).</span><span class="nx">metadata</span><span class="p">().</span><span class="nx">sorter</span><span class="o">===</span><span class="kc">false</span><span class="p">)){</span><span class="k">return</span> <span class="kc">true</span><span class="p">;};</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="kd">function</span> <span class="nx">checkHeaderOptions</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">sorter</span><span class="o">===</span><span class="kc">false</span><span class="p">)){</span><span class="k">return</span> <span class="kc">true</span><span class="p">;};</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="kd">function</span> <span class="nx">checkHeaderOptionsSortingLocked</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">lockedOrder</span><span class="p">))</span><span class="k">return</span> <span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">lockedOrder</span><span class="p">;</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="kd">function</span> <span class="nx">applyWidget</span><span class="p">(</span><span class="nx">table</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">widgets</span><span class="p">;</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">getWidgetById</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">]).</span><span class="nx">format</span><span class="p">(</span><span class="nx">table</span><span class="p">);}}</span><span class="kd">function</span> <span class="nx">getWidgetById</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">widgets</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">widgets</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">id</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">name</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="k">return</span> <span class="nx">widgets</span><span class="p">[</span><span class="nx">i</span><span class="p">];}}};</span><span class="kd">function</span> <span class="nx">formatSortingOrder</span><span class="p">(</span><span class="nx">v</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;Number&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="s2">&quot;desc&quot;</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span><span class="p">(</span><span class="nx">v</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">;}}</span><span class="kd">function</span> <span class="nx">isValueInArray</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="nx">v</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">;}}</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="kd">function</span> <span class="nx">setHeadersCss</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">$headers</span><span class="p">,</span><span class="nx">list</span><span class="p">,</span><span class="nx">css</span><span class="p">){</span><span class="nx">$headers</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">css</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">css</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">[];</span><span class="nx">$headers</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">offset</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">sortDisabled</span><span class="p">){</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">column</span><span class="p">]</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">);}});</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">list</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="p">[</span><span class="nx">list</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]].</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">css</span><span class="p">[</span><span class="nx">list</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]]);}}</span><span class="kd">function</span> <span class="nx">fixColumnWidth</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">$headers</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">widthFixed</span><span class="p">){</span><span class="kd">var</span> <span class="nx">colgroup</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;colgroup&gt;&#39;</span><span class="p">);</span><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;tr:first td&quot;</span><span class="p">,</span><span class="nx">table</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">colgroup</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;col&gt;&#39;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;width&#39;</span><span class="p">,</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">width</span><span class="p">()));});</span><span class="nx">$</span><span class="p">(</span><span class="nx">table</span><span class="p">).</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">colgroup</span><span class="p">);};}</span><span class="kd">function</span> <span class="nx">updateHeaderSortCount</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">sortList</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">sortList</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">sortList</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">headerList</span><span class="p">[</span><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]];</span><span class="nx">o</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">o</span><span class="p">.</span><span class="nx">count</span><span class="o">++</span><span class="p">;}}</span><span class="kd">function</span> <span class="nx">multisort</span><span class="p">(</span><span class="nx">table</span><span class="p">,</span><span class="nx">sortList</span><span class="p">,</span><span class="nx">cache</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="kd">var</span> <span class="nx">sortTime</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();}</span><span class="kd">var</span> <span class="nx">dynamicExp</span><span class="o">=</span><span class="s2">&quot;var sortWrapper = function(a,b) {&quot;</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">sortList</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">sortList</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">order</span><span class="o">=</span><span class="nx">sortList</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">1</span><span class="p">];</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">parsers</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;text&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">((</span><span class="nx">order</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">makeSortFunction</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="p">,</span><span class="s2">&quot;asc&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">makeSortFunction</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="p">,</span><span class="s2">&quot;desc&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="p">((</span><span class="nx">order</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">makeSortFunction</span><span class="p">(</span><span class="s2">&quot;numeric&quot;</span><span class="p">,</span><span class="s2">&quot;asc&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">makeSortFunction</span><span class="p">(</span><span class="s2">&quot;numeric&quot;</span><span class="p">,</span><span class="s2">&quot;desc&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">));</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="s2">&quot;e&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">;</span><span class="nx">dynamicExp</span><span class="o">+=</span><span class="s2">&quot;var &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot; = &quot;</span><span class="o">+</span><span class="nx">s</span><span class="p">;</span><span class="nx">dynamicExp</span><span class="o">+=</span><span class="s2">&quot;if(&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;) { return &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;; } &quot;</span><span class="p">;</span><span class="nx">dynamicExp</span><span class="o">+=</span><span class="s2">&quot;else { &quot;</span><span class="p">;}</span><span class="kd">var</span> <span class="nx">orgOrderCol</span><span class="o">=</span><span class="nx">cache</span><span class="p">.</span><span class="nx">normalized</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">dynamicExp</span><span class="o">+=</span><span class="s2">&quot;return a[&quot;</span><span class="o">+</span><span class="nx">orgOrderCol</span><span class="o">+</span><span class="s2">&quot;]-b[&quot;</span><span class="o">+</span><span class="nx">orgOrderCol</span><span class="o">+</span><span class="s2">&quot;];&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">dynamicExp</span><span class="o">+=</span><span class="s2">&quot;}; &quot;</span><span class="p">;}</span><span class="nx">dynamicExp</span><span class="o">+=</span><span class="s2">&quot;return 0; &quot;</span><span class="p">;</span><span class="nx">dynamicExp</span><span class="o">+=</span><span class="s2">&quot;}; &quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="nx">benchmark</span><span class="p">(</span><span class="s2">&quot;Evaling expression:&quot;</span><span class="o">+</span><span class="nx">dynamicExp</span><span class="p">,</span><span class="k">new</span> <span class="nb">Date</span><span class="p">());}</span><span class="nb">eval</span><span class="p">(</span><span class="nx">dynamicExp</span><span class="p">);</span><span class="nx">cache</span><span class="p">.</span><span class="nx">normalized</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="nx">sortWrapper</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="nx">benchmark</span><span class="p">(</span><span class="s2">&quot;Sorting on &quot;</span><span class="o">+</span><span class="nx">sortList</span><span class="p">.</span><span class="nx">toString</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; and dir &quot;</span><span class="o">+</span><span class="nx">order</span><span class="o">+</span><span class="s2">&quot; time:&quot;</span><span class="p">,</span><span class="nx">sortTime</span><span class="p">);}</span><span class="k">return</span> <span class="nx">cache</span><span class="p">;};</span><span class="kd">function</span> <span class="nx">makeSortFunction</span><span class="p">(</span><span class="nx">type</span><span class="p">,</span><span class="nx">direction</span><span class="p">,</span><span class="nx">index</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="s2">&quot;a[&quot;</span><span class="o">+</span><span class="nx">index</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;b[&quot;</span><span class="o">+</span><span class="nx">index</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">type</span><span class="o">==</span><span class="s1">&#39;text&#39;</span><span class="o">&amp;&amp;</span><span class="nx">direction</span><span class="o">==</span><span class="s1">&#39;asc&#39;</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; == &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; ? 0 : (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; === null ? Number.POSITIVE_INFINITY : (&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; === null ? Number.NEGATIVE_INFINITY : (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &lt; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;) ? -1 : 1 )));&quot;</span><span class="p">;}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">type</span><span class="o">==</span><span class="s1">&#39;text&#39;</span><span class="o">&amp;&amp;</span><span class="nx">direction</span><span class="o">==</span><span class="s1">&#39;desc&#39;</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; == &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; ? 0 : (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; === null ? Number.POSITIVE_INFINITY : (&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; === null ? Number.NEGATIVE_INFINITY : (&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; &lt; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;) ? -1 : 1 )));&quot;</span><span class="p">;}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">type</span><span class="o">==</span><span class="s1">&#39;numeric&#39;</span><span class="o">&amp;&amp;</span><span class="nx">direction</span><span class="o">==</span><span class="s1">&#39;asc&#39;</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; === null &amp;&amp; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; === null) ? 0 :(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; === null ? Number.POSITIVE_INFINITY : (&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; === null ? Number.NEGATIVE_INFINITY : &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; - &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;));&quot;</span><span class="p">;}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">type</span><span class="o">==</span><span class="s1">&#39;numeric&#39;</span><span class="o">&amp;&amp;</span><span class="nx">direction</span><span class="o">==</span><span class="s1">&#39;desc&#39;</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; === null &amp;&amp; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; === null) ? 0 :(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; === null ? Number.POSITIVE_INFINITY : (&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; === null ? Number.NEGATIVE_INFINITY : &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; - &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;));&quot;</span><span class="p">;}};</span><span class="kd">function</span> <span class="nx">makeSortText</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;((a[&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;] &lt; b[&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;]) ? -1 : ((a[&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;] &gt; b[&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;]) ? 1 : 0));&quot;</span><span class="p">;};</span><span class="kd">function</span> <span class="nx">makeSortTextDesc</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;((b[&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;] &lt; a[&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;]) ? -1 : ((b[&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;] &gt; a[&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;]) ? 1 : 0));&quot;</span><span class="p">;};</span><span class="kd">function</span> <span class="nx">makeSortNumeric</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;a[&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;]-b[&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;];&quot;</span><span class="p">;};</span><span class="kd">function</span> <span class="nx">makeSortNumericDesc</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;b[&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;]-a[&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;];&quot;</span><span class="p">;};</span><span class="kd">function</span> <span class="nx">sortText</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortLocaleCompare</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">localeCompare</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span><span class="p">((</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">)</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="p">((</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">));};</span><span class="kd">function</span> <span class="nx">sortTextDesc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortLocaleCompare</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">localeCompare</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">((</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">)</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="p">((</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">));};</span><span class="kd">function</span> <span class="nx">sortNumeric</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="p">;};</span><span class="kd">function</span> <span class="nx">sortNumericDesc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">;};</span><span class="kd">function</span> <span class="nx">getCachedSortType</span><span class="p">(</span><span class="nx">parsers</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">parsers</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">type</span><span class="p">;};</span><span class="k">this</span><span class="p">.</span><span class="nx">construct</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">settings</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">tHead</span><span class="o">||!</span><span class="k">this</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">$this</span><span class="p">,</span><span class="nx">$document</span><span class="p">,</span><span class="nx">$headers</span><span class="p">,</span><span class="nx">cache</span><span class="p">,</span><span class="nx">config</span><span class="p">,</span><span class="nx">shiftDown</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">sortOrder</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="o">=</span><span class="p">{};</span><span class="nx">config</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">,</span><span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">.</span><span class="nx">defaults</span><span class="p">,</span><span class="nx">settings</span><span class="p">);</span><span class="nx">$this</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">$</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;tablesorter&quot;</span><span class="p">,</span><span class="nx">config</span><span class="p">);</span><span class="nx">$headers</span><span class="o">=</span><span class="nx">buildHeaders</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">parsers</span><span class="o">=</span><span class="nx">buildParserCache</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">$headers</span><span class="p">);</span><span class="nx">cache</span><span class="o">=</span><span class="nx">buildCache</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">sortCSS</span><span class="o">=</span><span class="p">[</span><span class="nx">config</span><span class="p">.</span><span class="nx">cssDesc</span><span class="p">,</span><span class="nx">config</span><span class="p">.</span><span class="nx">cssAsc</span><span class="p">];</span><span class="nx">fixColumnWidth</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">$headers</span><span class="p">.</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">totalRows</span><span class="o">=</span><span class="p">(</span><span class="nx">$this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">$this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">rows</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">sortDisabled</span><span class="o">&amp;&amp;</span><span class="nx">totalRows</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">$this</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;sortStart&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">$cell</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">column</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">order</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">count</span><span class="o">++%</span><span class="mi">2</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lockedOrder</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">order</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lockedOrder</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">[</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortMultiSortKey</span><span class="p">]){</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortForce</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortForce</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">!=</span><span class="nx">i</span><span class="p">){</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">]);}}}</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">order</span><span class="p">]);}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">isValueInArray</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">config</span><span class="p">.</span><span class="nx">headerList</span><span class="p">[</span><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]];</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="nx">i</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">o</span><span class="p">.</span><span class="nx">count</span><span class="o">++</span><span class="p">;</span><span class="nx">s</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">count</span><span class="o">%</span><span class="mi">2</span><span class="p">;}}}</span><span class="k">else</span><span class="p">{</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">order</span><span class="p">]);}};</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">setHeadersCss</span><span class="p">(</span><span class="nx">$this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">$headers</span><span class="p">,</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="p">,</span><span class="nx">sortCSS</span><span class="p">);</span><span class="nx">appendToTable</span><span class="p">(</span><span class="nx">$this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">multisort</span><span class="p">(</span><span class="nx">$this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="p">,</span><span class="nx">cache</span><span class="p">));},</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}}).</span><span class="nx">mousedown</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">cancelSelection</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">onselectstart</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">false</span><span class="p">};</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}});</span><span class="nx">$this</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;update&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">me</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">me</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">parsers</span><span class="o">=</span><span class="nx">buildParserCache</span><span class="p">(</span><span class="nx">me</span><span class="p">,</span><span class="nx">$headers</span><span class="p">);</span><span class="nx">cache</span><span class="o">=</span><span class="nx">buildCache</span><span class="p">(</span><span class="nx">me</span><span class="p">);},</span><span class="mi">1</span><span class="p">);}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;updateCell&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">cell</span><span class="p">){</span><span class="kd">var</span> <span class="nx">config</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">;</span><span class="kd">var</span> <span class="nx">pos</span><span class="o">=</span><span class="p">[(</span><span class="nx">cell</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">rowIndex</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">cell</span><span class="p">.</span><span class="nx">cellIndex</span><span class="p">];</span><span class="nx">cache</span><span class="p">.</span><span class="nx">normalized</span><span class="p">[</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">]][</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span><span class="o">=</span><span class="nx">config</span><span class="p">.</span><span class="nx">parsers</span><span class="p">[</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">]].</span><span class="nx">format</span><span class="p">(</span><span class="nx">getElementText</span><span class="p">(</span><span class="nx">config</span><span class="p">,</span><span class="nx">cell</span><span class="p">),</span><span class="nx">cell</span><span class="p">);}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;sorton&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">list</span><span class="p">){</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;sortStart&quot;</span><span class="p">);</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="o">=</span><span class="nx">list</span><span class="p">;</span><span class="kd">var</span> <span class="nx">sortList</span><span class="o">=</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="p">;</span><span class="nx">updateHeaderSortCount</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">sortList</span><span class="p">);</span><span class="nx">setHeadersCss</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">$headers</span><span class="p">,</span><span class="nx">sortList</span><span class="p">,</span><span class="nx">sortCSS</span><span class="p">);</span><span class="nx">appendToTable</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">multisort</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">sortList</span><span class="p">,</span><span class="nx">cache</span><span class="p">));}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;appendCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">appendToTable</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">cache</span><span class="p">);}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;applyWidgetId&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">id</span><span class="p">){</span><span class="nx">getWidgetById</span><span class="p">(</span><span class="nx">id</span><span class="p">).</span><span class="nx">format</span><span class="p">(</span><span class="k">this</span><span class="p">);}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;applyWidgets&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">applyWidget</span><span class="p">(</span><span class="k">this</span><span class="p">);});</span><span class="k">if</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">metadata</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">metadata</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">metadata</span><span class="p">().</span><span class="nx">sortlist</span><span class="p">)){</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">metadata</span><span class="p">().</span><span class="nx">sortlist</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">$this</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;sorton&quot;</span><span class="p">,[</span><span class="nx">config</span><span class="p">.</span><span class="nx">sortList</span><span class="p">]);}</span><span class="nx">applyWidget</span><span class="p">(</span><span class="k">this</span><span class="p">);});};</span><span class="k">this</span><span class="p">.</span><span class="nx">addParser</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">parser</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">parsers</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">parsers</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">id</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">parser</span><span class="p">.</span><span class="nx">id</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="nx">a</span><span class="o">=</span><span class="kc">false</span><span class="p">;}}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">parsers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">parser</span><span class="p">);};};</span><span class="k">this</span><span class="p">.</span><span class="nx">addWidget</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">widget</span><span class="p">){</span><span class="nx">widgets</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">widget</span><span class="p">);};</span><span class="k">this</span><span class="p">.</span><span class="nx">formatFloat</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">i</span><span class="p">))</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">i</span><span class="p">;};</span><span class="k">this</span><span class="p">.</span><span class="nx">formatInt</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">i</span><span class="p">))</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">i</span><span class="p">;};</span><span class="k">this</span><span class="p">.</span><span class="nx">isDigit</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">config</span><span class="p">){</span><span class="k">return</span><span class="sr">/^[-+]?\d*$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[,.&#39;]/g</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">)));};</span><span class="k">this</span><span class="p">.</span><span class="nx">clearTableBody</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">table</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">msie</span><span class="p">){</span><span class="kd">function</span> <span class="nx">empty</span><span class="p">(){</span><span class="k">while</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);}</span><span class="nx">empty</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">]);}</span><span class="k">else</span><span class="p">{</span><span class="nx">table</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;}};}});</span><span class="nx">$</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">tablesorter</span><span class="o">:</span><span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">.</span><span class="nx">construct</span><span class="p">});</span><span class="kd">var</span> <span class="nx">ts</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">;</span><span class="nx">ts</span><span class="p">.</span><span class="nx">addParser</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;text&quot;</span><span class="p">,</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">;},</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">toLocaleLowerCase</span><span class="p">());},</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;text&quot;</span><span class="p">});</span><span class="nx">ts</span><span class="p">.</span><span class="nx">addParser</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;digit&quot;</span><span class="p">,</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">table</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">;</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">.</span><span class="nx">isDigit</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">c</span><span class="p">);},</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">.</span><span class="nx">formatFloat</span><span class="p">(</span><span class="nx">s</span><span class="p">);},</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;numeric&quot;</span><span class="p">});</span><span class="nx">ts</span><span class="p">.</span><span class="nx">addParser</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;currency&quot;</span><span class="p">,</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span><span class="sr">/^[Â£$â¬?.]/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">s</span><span class="p">);},</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">.</span><span class="nx">formatFloat</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="sr">/[Â£$â¬]/g</span><span class="p">),</span><span class="s2">&quot;&quot;</span><span class="p">));},</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;numeric&quot;</span><span class="p">});</span><span class="nx">ts</span><span class="p">.</span><span class="nx">addParser</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;ipAddress&quot;</span><span class="p">,</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span><span class="sr">/^\d{2,3}[\.]\d{2,3}[\.]\d{2,3}[\.]\d{2,3}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">s</span><span class="p">);},</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">item</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">item</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">2</span><span class="p">){</span><span class="nx">r</span><span class="o">+=</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">item</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">r</span><span class="o">+=</span><span class="nx">item</span><span class="p">;}}</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">.</span><span class="nx">formatFloat</span><span class="p">(</span><span class="nx">r</span><span class="p">);},</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;numeric&quot;</span><span class="p">});</span><span class="nx">ts</span><span class="p">.</span><span class="nx">addParser</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;url&quot;</span><span class="p">,</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span><span class="sr">/^(https?|ftp|file):\/\/$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">s</span><span class="p">);},</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">jQuery</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="sr">/(https?|ftp|file):\/\//</span><span class="p">),</span><span class="s1">&#39;&#39;</span><span class="p">));},</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;text&quot;</span><span class="p">});</span><span class="nx">ts</span><span class="p">.</span><span class="nx">addParser</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;isoDate&quot;</span><span class="p">,</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span><span class="sr">/^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">s</span><span class="p">);},</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">.</span><span class="nx">formatFloat</span><span class="p">((</span><span class="nx">s</span><span class="o">!=</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">?</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="sr">/-/g</span><span class="p">),</span><span class="s2">&quot;/&quot;</span><span class="p">)).</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">);},</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;numeric&quot;</span><span class="p">});</span><span class="nx">ts</span><span class="p">.</span><span class="nx">addParser</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;percent&quot;</span><span class="p">,</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span><span class="sr">/\%$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">s</span><span class="p">));},</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">.</span><span class="nx">formatFloat</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="sr">/%/g</span><span class="p">),</span><span class="s2">&quot;&quot;</span><span class="p">));},</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;numeric&quot;</span><span class="p">});</span><span class="nx">ts</span><span class="p">.</span><span class="nx">addParser</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;usLongDate&quot;</span><span class="p">,</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="sr">/^[A-Za-z]{3,10}\.? [0-9]{1,2}, ([0-9]{4}|&#39;?[0-9]{2}) (([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(AM|PM)))$/</span><span class="p">));},</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">.</span><span class="nx">formatFloat</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">s</span><span class="p">).</span><span class="nx">getTime</span><span class="p">());},</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;numeric&quot;</span><span class="p">});</span><span class="nx">ts</span><span class="p">.</span><span class="nx">addParser</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;shortDate&quot;</span><span class="p">,</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span><span class="sr">/\d{1,2}[\/\-]\d{1,2}[\/\-]\d{2,4}/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">s</span><span class="p">);},</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">table</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">;</span><span class="nx">s</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\-/g</span><span class="p">,</span><span class="s2">&quot;/&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">dateFormat</span><span class="o">==</span><span class="s2">&quot;us&quot;</span><span class="p">){</span><span class="nx">s</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/</span><span class="p">,</span><span class="s2">&quot;$3/$1/$2&quot;</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">dateFormat</span><span class="o">==</span><span class="s2">&quot;uk&quot;</span><span class="p">){</span><span class="nx">s</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/</span><span class="p">,</span><span class="s2">&quot;$3/$2/$1&quot;</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">dateFormat</span><span class="o">==</span><span class="s2">&quot;dd/mm/yy&quot;</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">dateFormat</span><span class="o">==</span><span class="s2">&quot;dd-mm-yy&quot;</span><span class="p">){</span><span class="nx">s</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{2})/</span><span class="p">,</span><span class="s2">&quot;$1/$2/$3&quot;</span><span class="p">);}</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">.</span><span class="nx">formatFloat</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">s</span><span class="p">).</span><span class="nx">getTime</span><span class="p">());},</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;numeric&quot;</span><span class="p">});</span><span class="nx">ts</span><span class="p">.</span><span class="nx">addParser</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;time&quot;</span><span class="p">,</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span><span class="sr">/^(([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(am|pm)))$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">s</span><span class="p">);},</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">.</span><span class="nx">formatFloat</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="s2">&quot;2000/01/01 &quot;</span><span class="o">+</span><span class="nx">s</span><span class="p">).</span><span class="nx">getTime</span><span class="p">());},</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;numeric&quot;</span><span class="p">});</span><span class="nx">ts</span><span class="p">.</span><span class="nx">addParser</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;metadata&quot;</span><span class="p">,</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">;},</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">table</span><span class="p">,</span><span class="nx">cell</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">parserMetadataName</span><span class="p">)</span><span class="o">?</span><span class="s1">&#39;sortValue&#39;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">parserMetadataName</span><span class="p">;</span><span class="k">return</span> <span class="nx">$</span><span class="p">(</span><span class="nx">cell</span><span class="p">).</span><span class="nx">metadata</span><span class="p">()[</span><span class="nx">p</span><span class="p">];},</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;numeric&quot;</span><span class="p">});</span><span class="nx">ts</span><span class="p">.</span><span class="nx">addWidget</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;zebra&quot;</span><span class="p">,</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">table</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="kd">var</span> <span class="nx">time</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();}</span><span class="kd">var</span> <span class="nx">$tr</span><span class="p">,</span><span class="nx">row</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">odd</span><span class="p">;</span><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;tr:visible&quot;</span><span class="p">,</span><span class="nx">table</span><span class="p">.</span><span class="nx">tBodies</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">$tr</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">$tr</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">cssChildRow</span><span class="p">))</span><span class="nx">row</span><span class="o">++</span><span class="p">;</span><span class="nx">odd</span><span class="o">=</span><span class="p">(</span><span class="nx">row</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">);</span><span class="nx">$tr</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">widgetZebra</span><span class="p">.</span><span class="nx">css</span><span class="p">[</span><span class="nx">odd</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">]).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">widgetZebra</span><span class="p">.</span><span class="nx">css</span><span class="p">[</span><span class="nx">odd</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">])});</span><span class="k">if</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="nx">$</span><span class="p">.</span><span class="nx">tablesorter</span><span class="p">.</span><span class="nx">benchmark</span><span class="p">(</span><span class="s2">&quot;Applying Zebra widget&quot;</span><span class="p">,</span><span class="nx">time</span><span class="p">);}}});})(</span><span class="nx">jQuery</span><span class="p">);</span></div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.05188s from github-fe129-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-5bef6dacd990ce272ec009917ceea0b9d96f84b7.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-53d26074ac8482cea7af43bcd3a8dd06f98f811c.js" type="text/javascript"></script>
      
      
  </body>
</html>

